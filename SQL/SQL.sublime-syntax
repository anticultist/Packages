%YAML 1.2
---
name: SQL
file_extensions:
  - sql
  - ddl
  - dml
scope: source.sql

variables:
  end_identifier: (?=[ \t]*(?:[^\w'"`. \t]|$))

contexts:
  main:
    - include: comments
    - match: |-
        (?xi)
        \b(create(?:\s+or\s+replace)?)\s+
        (aggregate|conversion|database|domain|function|group|((?:fulltext|spatial|unique)\s+)?index|language|operator class|operator|procedure|rule|schema|sequence|table(?:space)?|trigger|type|user|view)
        \b\s*
      scope: meta.create.sql
      captures:
        1: keyword.other.create.sql
        2: keyword.other.sql
      push: identifier_create
    - match: (?i:\s*\b(drop)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|procedure|rule|schema|sequence|table|tablespace|trigger|type|user|view))
      scope: meta.drop.sql
      captures:
        1: keyword.other.create.sql
        2: keyword.other.sql
    - match: (?i:\s*(drop)\s+(table)\s+(\w+)(\s+cascade)?\b)
      scope: meta.drop.sql
      captures:
        1: keyword.other.create.sql
        2: keyword.other.table.sql
        3: entity.name.function.sql
        4: keyword.other.cascade.sql
    - match: (?i:\s*\b(alter)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|procedure|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)
      scope: meta.alter.sql
      captures:
        1: keyword.other.create.sql
        2: keyword.other.table.sql
    - match: (?i:\s*\b(add)\s+(column|constraint|fulltext\s+(index|key)|index|spatial\s+(index|key)))
      scope: meta.add.sql
      captures:
        1: keyword.other.add.sql
        2: keyword.other.sql
    - match: |-
        (?xi)

                # normal stuff, capture 1
                \b(bigint|bigserial|bit|bool|boolean|box|bytea|cidr|circle|date|datetime|double\s+precision|enum|inet|int|integer|line|longtext|lseg|macaddr|money|ntext|oid|path|point|polygon|real|serial|smallint|sysdate|sysname|text|tinytext)\b

                # numeric suffix, capture 2 + 3i
                |\b(bit\svarying|character\s+(?:varying)?|tinyint|var\schar|float|interval)\((\d+)\)

                # optional numeric suffix, capture 4 + 5i
                |\b(char|number|nvarchar|varbinary|varchar\d?)\b(?:\((\d+)\))?

                # special case, capture 6 + 7i + 8i
                |\b(numeric|decimal)\b(?:\((\d+),(\d+)\))?

                # special case, captures 9, 10i, 11
                |\b(times?)\b(?:\((\d+)\))?(\swith(?:out)?\s+time\s+zone\b)?

                # special case, captures 12, 13, 14i, 15
                |\b(timestamp)(?:(s|tz))?\b(?:\((\d+)\))?(\s(with|without)\s+time\s+zone\b)?


      captures:
        1: storage.type.sql
        2: storage.type.sql
        3: constant.numeric.sql
        4: storage.type.sql
        5: constant.numeric.sql
        6: storage.type.sql
        7: constant.numeric.sql
        8: constant.numeric.sql
        9: storage.type.sql
        10: constant.numeric.sql
        11: storage.type.sql
        12: storage.type.sql
        13: storage.type.sql
        14: constant.numeric.sql
        15: storage.type.sql
    - match: (?i:\b(((?:foreign|fulltext|primary|unique)\s+)?key|references|on\sdelete(\s+cascade)?|on\supdate(\s+cascade)?|check|constraint|default)\b)
      scope: storage.modifier.sql
    - match: \b\d+\b
      scope: constant.numeric.sql
    - match: (?i:\b(true|false)\b)
      scope: constant.boolean.sql
    - match: (?i:\b(select(\s+(distinct|top))?|insert(\s+(ignore\s+)?into)?|update|delete|truncate|from|set|where|group\s+by|with|case|when|then|else|end|union(\s+all)?|using|order\s+by|limit|(inner|cross)\s+join|join|straight_join|(left|right)(\s+outer)?\s+join|natural(\s+(left|right)(\s+outer)?)?\s+join)\b)
      scope: keyword.other.DML.sql
    - match: (?i:\b(?:(is)\s+)?(?:(not)\s+)?(null)\b)
      captures:
        1: keyword.operator.logical.sql
        2: keyword.operator.logical.sql
        3: constant.language.sql
    - match: (?i:\b(and|or|like|having|exists|between|in)\b)
      scope: keyword.operator.logical.sql
    - match: (?i:\bvalues\b)
      scope: keyword.other.DML.II.sql
    - match: (?i:\b(begin(\s+work)?|start\s+transaction|commit(\s+work)?|rollback(\s+work)?)\b)
      scope: keyword.other.LUW.sql
    - match: (?i:\b(grant(\swith\sgrant\soption)?|revoke)\b)
      scope: keyword.other.authorization.sql
    - match: (?i:\s*\b(comment\s+on\s+(table|column|aggregate|constraint|database|domain|function|index|operator|rule|schema|sequence|trigger|type|view))\s+.*?\s+(is)\s+)
      scope: keyword.other.object-comments.sql
    - match: (?i)\bas\b
      scope: keyword.operator.assignment.alias.sql
    - match: (?i)\b(asc|desc)\b
      scope: keyword.other.order.sql
    - match: \*
      scope: variable.language.star.sql
    - match: "<=>|[!<>]?=|<>|<|>"
      scope: keyword.operator.comparison.sql
    - match: '-|\+|/'
      scope: keyword.operator.math.sql
    - match: \|\|
      scope: keyword.operator.concatenator.sql
    - match: (?i)\b(CURRENT_(DATE|TIME(STAMP)?|USER)|(SESSION|SYSTEM)_USER)\b
      comment: List of SQL99 built-in functions from http://www.oreilly.com/catalog/sqlnut/chapter/ch04.html
      scope: support.function.scalar.sql
    - match: (?i)\b(AVG|COUNT|MIN|MAX|SUM)(?=\s*\()
      comment: List of SQL99 built-in functions from http://www.oreilly.com/catalog/sqlnut/chapter/ch04.html
      scope: support.function.aggregate.sql
    - match: (?i)\b(CONCATENATE|CONVERT|LOWER|SUBSTRING|TRANSLATE|TRIM|UPPER)\b
      scope: support.function.string.sql
    - match: (?i)\b(AGAINST|ASCII|BIN|BIT_LENGTH|CAST|CHAR_LENGTH|CHARACTER_LENGTH|CHR|CONCAT|CONCAT_WS|ELT|EXPORT_SET|EXTRACTVALUE|FIELD|FIND_IN_SET|FORMAT|FROM_BASE64|HEX|INSTR|LCASE|LEFT|LENGTH|LENGTHB|LOAD_FILE|LOCATE|LPAD|LPAD_ORACLE|LTRIM|LTRIM_ORACLE|MAKE_SET|MATCH|MID|OCTET_LENGTH|ORD|POSITION|QUOTE|REPEAT|REPLACE|REVERSE|RIGHT|RPAD|RTRIM|SOUNDEX|SPACE|STRCMP|SUBSTR|SUBSTRING_INDEX|TO_BASE64|TRIM_ORACLE|UCASE|UNHEX|UPDATEXML|WEIGHT_STRING)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/string-functions/
      scope: support.function.string.sql
    - match: (?i)\b(REGEXP_INSTR|REGEXP_REPLACE|REGEXP_SUBSTR)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/regular-expressions-functions/
      scope: support.function.string.regexp.sql
    - match: (?i)\b(ADDDATE|ADDTIME|CONVERT_TZ|CURDATE|CURTIME|DATE_ADD|DATE_FORMAT|DATE_SUB|DATEDIFF|DAY|DAYNAME|DAYOFMONTH|DAYOFWEEK|DAYOFYEAR|EXTRACT|FROM_DAYS|FROM_UNIXTIME|GET_FORMAT|HOUR|LAST_DAY|LOCALTIME|LOCALTIMESTAMP|MAKEDATE|MAKETIME|MICROSECOND|MINUTE|MONTH|MONTHNAME|NOW|PERIOD_ADD|PERIOD_DIFF|QUARTER|SEC_TO_TIME|SECOND|STR_TO_DATE|SUBDATE|SUBTIME|TIME_FORMAT|TIME_TO_SEC|TIMEDIFF|TIMESTAMPADD|TIMESTAMPDIFF|TO_DAYS|TO_SECONDS|UNIX_TIMESTAMP|UTC_DATE|UTC_TIME|UTC_TIMESTAMP|WEEK|WEEKDAY|WEEKOFYEAR|YEAR|YEARWEEK)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/date-time-functions/
      scope: support.function.time.sql
    - match: (?i)\b(BIT_AND|BIT_OR|BIT_XOR|GROUP_CONCAT|JSON_ARRAYAGG|JSON_OBJECTAGG|STD|STDDEV|STDDEV_POP|STDDEV_SAMP|VAR_POP|VAR_SAMP|VARIANCE)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/aggregate-functions/
      scope: support.function.aggregate.sql
    - match: (?i)\b(ABS|ACOS|ASIN|ATAN|ATAN2|CEIL|CEILING|CONV|COS|COT|CRC32|DEGREES|EXP|FLOOR|GREATEST|LEAST|LN|LOG|LOG10|LOG2|MOD|OCT|PI|POW|POWER|RADIANS|RAND|ROUND|SIGN|SIN|SQRT|TAN)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/numeric-functions/
      scope: support.function.numeric.sql
    - match: (?i)\b(IFNULL|NULLIF)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/control-flow-functions/
      scope: support.function.controlflow.sql
    - match: (?i)\b(BIT_COUNT)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/bit-functions-and-operators/
      scope: support.function.bit.sql
    - match: (?i)\b(AES_DECRYPT|AES_ENCRYPT|COMPRESS|DECODE|DES_DECRYPT|DES_ENCRYPT|ENCODE|ENCRYPT|MD5|OLD_PASSWORD|PASSWORD|SHA1|SHA2|UNCOMPRESS|UNCOMPRESSED_LENGTH)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/encryption-hashing-and-compression-functions/
      scope: support.function.encryption.sql
    - match: (?i)\b(BENCHMARK|BINLOG_GTID_POS|CHARSET|COERCIBILITY|COLLATION|CONNECTION_ID|CURRENT_ROLE|DATABASE|DECODE_HISTOGRAM|FOUND_ROWS|LAST_INSERT_ID|LAST_VALUE|ROW_COUNT|SCHEMA|USER|VERSION)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/information-functions/
      scope: support.function.information.sql
    - match: (?i)\b(GET_LOCK|INET6_ATON|INET6_NTOA|INET_ATON|INET_NTOA|IS_FREE_LOCK|IS_IPV4|IS_IPV4_COMPAT|IS_IPV4_MAPPED|IS_IPV6|IS_USED_LOCK|MASTER_GTID_WAIT|MASTER_POS_WAIT|NAME_CONST|RELEASE_ALL_LOCKS|RELEASE_LOCK|SLEEP|UUID|UUID_SHORT)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/miscellaneous-functions/
      scope: support.function.other.sql
    - match: (?i)\b(COLUMN_ADD|COLUMN_CHECK|COLUMN_CREATE|COLUMN_DELETE|COLUMN_EXISTS|COLUMN_GET|COLUMN_JSON|COLUMN_LIST)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/dynamic-columns-functions/
      scope: support.function.columns.sql
    - match: (?i)\b(JSON_ARRAY|JSON_ARRAY_APPEND|JSON_ARRAY_INSERT|JSON_COMPACT|JSON_CONTAINS|JSON_CONTAINS_PATH|JSON_DEPTH|JSON_DETAILED|JSON_EXISTS|JSON_EXTRACT|JSON_INSERT|JSON_KEYS|JSON_LENGTH|JSON_LOOSE|JSON_MERGE|JSON_MERGE_PATCH|JSON_MERGE_PRESERVE|JSON_OBJECT|JSON_QUERY|JSON_QUOTE|JSON_REMOVE|JSON_REPLACE|JSON_SEARCH|JSON_SET|JSON_TYPE|JSON_UNQUOTE|JSON_VALID|JSON_VALUE)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/json-functions/
      scope: support.function.json.sql
    - match: (?i)\b(SPIDER_BG_DIRECT_SQL|SPIDER_COPY_TABLES|SPIDER_DIRECT_SQL|SPIDER_FLUSH_TABLE_MON_CACHE)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/spider-functions/
      scope: support.function.spider.sql
    - match: (?i)\b(CUME_DIST|DENSE_RANK|FIRST_VALUE|LAG|LEAD|MEDIAN|NTH_VALUE|NTILE|PERCENT_RANK|PERCENTILE_CONT|PERCENTILE_DISC|RANK|ROW_NUMBER)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/window-functions/
      scope: support.function.window.sql
    - match: (?i)\b(BUFFER|ConvexHull|GeometryCollection|LineString|MultiLineString|MultiPoint|MultiPolygon|PointOnSurface|ST_BUFFER|ST_ConvexHull|ST_PointOnSurface|ST_INTERSECTION|ST_SYMDIFFERENCE|ST_UNION)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/geometry-constructors/
      scope: support.function.geographic.geometry.constructor.sql
    - match: (?i)\b(BOUNDARY|DIMENSION|ENVELOPE|GeometryN|GeometryType|IsClosed|IsEmpty|IsRing|IsSimple|NumGeometries|SRID|ST_BOUNDARY|ST_DIMENSION|ST_ENVELOPE|ST_GeometryN|ST_GeometryType|ST_IsClosed|ST_IsEmpty|ST_IsRing|ST_IsSimple|ST_NumGeometries|ST_Relate|ST_SRID)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/geometry-properties/
      scope: support.function.geographic.property.geometry.sql
    - match: (?i)\b(CONTAINS|CROSSES|DISJOINT|EQUALS|INTERSECTS|OVERLAPS|ST_CONTAINS|ST_CROSSES|ST_DIFFERENCE|ST_DISJOINT|ST_DISTANCE|ST_EQUALS|ST_INTERSECTS|ST_LENGTH|ST_OVERLAPS|ST_TOUCHES|ST_WITHIN|TOUCHES|WITHIN)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/geometry-relations/
      scope: support.function.geographic.geometry.relation.sql
    - match: (?i)\b(EndPoint|GLength|NumPoints|PointN|ST_EndPoint|ST_NumPoints|ST_PointN|ST_StartPoint|StartPoint)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/linestring-properties/
      scope: support.function.geographic.linestring.sql
    - match: (?i)\b(MBRContains|MBRDisjoint|MBREqual|MBRIntersects|MBROverlaps|MBRTouches|MBRWithin)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/mbr-minimum-bounding-rectangle/
      scope: support.function.geographic.mbr.sql
    - match: (?i)\b(ST_X|ST_Y|X|Y)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/point-properties/
      scope: support.function.geographic.property.point.sql
    - match: (?i)\b(Area|Centroid|ExteriorRing|InteriorRingN|NumInteriorRings|ST_Area|ST_Centroid|ST_ExteriorRing|ST_InteriorRingN|ST_NumInteriorRings)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/polygon-properties/
      scope: support.function.geographic.property.polygon.sql
    - match: (?i)\b(AsBinary|AsWKB|GeomCollFromWKB|GeometryCollectionFromWKB|GeometryFromWKB|GeomFromWKB|LineFromWKB|LineStringFromWKB|MLineFromWKB|MPointFromWKB|MPolyFromWKB|MultiLineStringFromWKB|MultiPointFromWKB|MultiPolygonFromWKB|PointFromWKB|PolyFromWKB|PolygonFromWKB|ST_AsBinary|ST_AsWKB|ST_GeomCollFromWKB|ST_GeometryCollectionFromWKB|ST_GeometryFromWKB|ST_GeomFromWKB|ST_LineFromWKB|ST_LineStringFromWKB|ST_PointFromWKB|ST_PolyFromWKB|ST_PolygonFromWKB)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/wkb/
      scope: support.function.geographic.wkb.sql
    - match: (?i)\b(AsText|AsWKT|GeomCollFromText|GeometryCollectionFromText|GeometryFromText|GeomFromText|LineFromText|LineStringFromText|MLineFromText|MPointFromText|MPolyFromText|MultiLineStringFromText|MultiPointFromText|MultiPolygonFromText|PointFromText|PolyFromText|PolygonFromText|ST_AsText|ST_AsWKT|ST_GeomCollFromText|ST_GeometryCollectionFromText|ST_GeometryFromText|ST_GeomFromText|ST_LineFromText|ST_LineStringFromText|ST_PointFromText|ST_PolyFromText|ST_PolygonFromText)(?=\s*\()
      comment: List of built-in functions for MariaDB/MySQL from https://mariadb.com/kb/en/wkt/
      scope: support.function.geographic.wkt.sql
    - match: \b(\w+?)\.(\w+)\b
      captures:
        1: constant.other.database-name.sql
        2: constant.other.table-name.sql
    - include: strings
    - include: regexps
    - match: (\()(\))
      comment: Allow for special ↩ behavior
      scope: meta.block.sql
      captures:
        1: punctuation.section.scope.begin.sql
        2: punctuation.section.scope.end.sql
  comments:
    - match: "--"
      scope: punctuation.definition.comment.sql
      push:
        - meta_scope: comment.line.double-dash.sql
        - match: \n
          pop: true
    - match: "#"
      scope: punctuation.definition.comment.sql
      push:
        - meta_scope: comment.line.number-sign.sql
        - match: \n
          pop: true
    - match: /\*
      scope: punctuation.definition.comment.sql
      push:
        - meta_scope: comment.block.c
        - match: \*/
          pop: true
        - match: ^\s*(\*)(?!/)
          captures:
            1: punctuation.definition.comment.sql
  regexps:
    - match: /(?=\S.*/)
      scope: punctuation.definition.string.begin.sql
      push:
        - meta_scope: string.regexp.sql
        - match: /
          scope: punctuation.definition.string.end.sql
          pop: true
        - include: string_interpolation
        - match: \\/
          scope: constant.character.escape.slash.sql
    - match: '%r\{'
      comment: We should probably handle nested bracket pairs!?! -- Allan
      scope: punctuation.definition.string.begin.sql
      push:
        - meta_scope: string.regexp.modr.sql
        - match: '\}'
          scope: punctuation.definition.string.end.sql
          pop: true
        - include: string_interpolation
  string_escape:
    - match: \\.
      scope: constant.character.escape.sql
  string_interpolation:
    - match: '(#\{)([^\}]*)(\})'
      scope: string.interpolated.sql
      captures:
        1: punctuation.definition.string.begin.sql
        3: punctuation.definition.string.end.sql
  strings:
    - match: "'"
      scope: punctuation.definition.string.begin.sql
      push:
        - meta_scope: string.quoted.single.sql
        - match: "''"
          scope: constant.character.escape.sql
        - match: "'"
          scope: punctuation.definition.string.end.sql
          pop: true
        - include: string_escape
    - match: "`"
      scope: punctuation.definition.string.begin.sql
      push:
        - meta_scope: string.quoted.other.backtick.sql
        - match: "`"
          scope: punctuation.definition.string.end.sql
          pop: true
        - include: string_escape
    - match: '"'
      scope: punctuation.definition.string.begin.sql
      push:
        - meta_scope: string.quoted.double.sql
        - match: '""'
          scope: constant.character.escape.sql
        - match: '"'
          scope: punctuation.definition.string.end.sql
          pop: true
        - include: string_interpolation
    - match: '%\{'
      scope: punctuation.definition.string.begin.sql
      push:
        - meta_scope: string.other.quoted.brackets.sql
        - match: '\}'
          scope: punctuation.definition.string.end.sql
          pop: true
        - include: string_interpolation
  identifier_create:
    - meta_content_scope: meta.toc-list.full-identifier.sql
    - match: '(?:(\w+)|''([^'']+)''|"([^"]+)"|`([^`]+)`){{end_identifier}}'
      scope: meta.toc-list.full-identifier.sql
      captures:
        1: entity.name.function.sql
        2: entity.name.function.sql
        3: entity.name.function.sql
        4: entity.name.function.sql
      pop: true
      # Schema identifiers
    - match: (?:\w+|'[^']+'|"[^"]+"|`[^`]+`)\s*(\.)
      captures:
        1: punctuation.accessor.dot.sql
      # Handle situations where the schema and . 
    - match: '{{end_identifier}}'
      pop: true
